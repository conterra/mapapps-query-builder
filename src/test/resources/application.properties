#
# Copyright (C) 2021 con terra GmbH (info@conterra.de)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#         http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# Global configuration properties
# These properties are used inside the test jetty server
# and can be used to document required global properties

# url to the remote map.apps instance
mapapps.remote.base=${mapapps.remote.base}
# title in apps
client.config.productname=Developer Network
# defines runtime version for the sample project. Defaults to map.apps 3.x
# to develope mapapps 4.x apps, change this property
apprt.version=${apprt.version}

# the init file to bootstrap map.apps
client.config.initjs=$\{mapapps.remote.base\}/resources/jsregistry/root/apprt-boot/$\{apprt.version\}/boot.js

# defines the initialization layer file
# you can use a comma separated list of layer files
# or change the name of the main layer file
client.config.mainlayerfiles=apprt/launch/layer

#local (embedded) js registry root url
jsregistry.root.url=${applicationURL.noscheme}/resources/jsregistry/root

# This is used to filter a default app name in the *.html files
default.app.name=${default.app.name}

# the following is used by the ProxyServlet to read the allowed url which can be forwared by this application
# For ex. (secured server): http://myserver.mycompany.com/arcgis/rest/services,ayn2C2iPvqjeqWoXwV6rjmr43kyo23mhIPnXz2CEiMA6rVu0xR0St8gKsd0olv8a;
# For ex. (non-secured server): http://sampleserver1.arcgisonline.com/arcgis/rest/services;
# <url>[,<token>];\ or
# <url>[,<username>,<password>];\ (username/password currently not encrypted)
proxy.allowedServerUrls=${proxy.allowedServerUrls}

# the following is support for proxied ssl connections
# if you configure '*' then you trust all ssl server certificates
# you can also confige the dns of the certificate subjects to trust them, separated by '|'
# or leave the configuration empty, then the normal java mechanism is used.
proxy.allowedSSLDNs=${proxy.allowedSSLDNs}

# Defines rules for proxy access based on host names.
# It provides more fine grained control what requests use a proxy page.
# Sample:
#   proxy.use.rules=sample1.mapapps.de,sample2.mapapps.de|/proxyPage
#
#   sample1.mapapps.de goes over default proxy page "/proxy",
#   sample2.mapapps.de goes over own proxy page "/proxyPage'
proxy.use.rules=${proxy.use.rules}

jsregistry.replacement.paths=**/tests/*.html

jsregistry.directoryscanner.npmfolder=${basedir}/node_modules
jsregistry.directoryscanner.npmincludes=mocha,chai,@conterra,@conterra/mapapps-mocha-runner
