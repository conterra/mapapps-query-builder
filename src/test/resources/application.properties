#
# Copyright (C) 2025 con terra GmbH (info@conterra.de)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#         http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# Global configuration properties
# These properties are used inside the development server
# and can be used to document required global properties

# url to the remote map.apps instance
mapapps.remote.base=${mapapps.remote.base}
# title in apps
client.config.productname=Developer Network
# defines runtime version for the sample project. Defaults to map.apps 3.x
# to develope mapapps 4.x apps, change this property
apprt.version=${apprt.version}

# the init file to bootstrap map.apps
client.config.initjs=$\{mapapps.remote.base\}/resources/jsregistry/root/apprt-boot/$\{apprt.version\}/boot.js

# defines the initialization layer file
# you can use a comma separated list of layer files
# or change the name of the main layer file
client.config.mainlayerfiles=apprt/launch/layer

# This is used to filter a default app name in the *.html files
default.app.name=${default.app.name}

# the following is used by the ProxyServlet to read the allowed url which can be forwared by this application
# For ex. (secured server): http://myserver.mycompany.com/arcgis/rest/services,ayn2C2iPvqjeqWoXwV6rjmr43kyo23mhIPnXz2CEiMA6rVu0xR0St8gKsd0olv8a;
# For ex. (non-secured server): http://sampleserver1.arcgisonline.com/arcgis/rest/services;
# <url>[,<token>];\ or
# <url>[,<username>,<password>];\ (username/password currently not encrypted)
proxy.allowedServerUrls=${proxy.allowedServerUrls}

# Defines rules for proxy access based on host names.
# It provides more fine grained control what requests use a proxy page.
# Sample:
#   proxy.use.rules=sample1.mapapps.de,sample2.mapapps.de|/proxyPage
#
#   sample1.mapapps.de goes over default proxy page "/proxy",
#   sample2.mapapps.de goes over own proxy page "/proxyPage'
proxy.use.rules=${proxy.use.rules}

# Starting with version 4.6.0 map.apps assumes accessed resources/webservers support CORS
# http://enable-cors.org/
# These properties won't be considered anymore:
# proxy.cors.enabledServers, proxy.cors.detection, proxy.cors.enabled
# comma separated list of servers like:
#  http://servicesbeta.esri.com,http://server.organization.com
cors.request.trustedServers=${cors.request.trustedServers}

# Enable debug logging (in browser console).
client.config.logging=DEBUG

############## Using the Identity Service ##############

security.login.base=$\{mapapps.remote.base\}
security.login.service.url=$\{security.login.base\}/account/login
security.logout.service.url=$\{security.login.base\}/account/logout
security.self.service.url=$\{security.login.base\}/account/self
security.identity.tokens.service.url=$\{security.login.base\}/account/tokens
security.identity.self.service.url=$\{security.self.service.url\}

# Configuration options for a remote identity service instance
#security.mode=IDENTITY
#security.login.base=https://identity.service.hostname/identity
#esri.api.arcgisPortalUrl=https://myhost.example.com/portal
# Optional:
#security.identity.cookieName=ctIDENTITY
#cors.request.trustedServers=https://identity.service.hostname

# Configuration options for a local identity service instance e.g. based on ct-identity docker image
#security.mode=IDENTITY
# URL of the docker container providing the identity service
#security.login.base=http://localhost:8080
#esri.api.arcgisPortalUrl=https://myhost.example.com/portal
#proxy.allowedServerUrls=http://localhost:8080/**,trusted:true;
